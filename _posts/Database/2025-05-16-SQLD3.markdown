---
layout: post
title: "[SQLD] 모델링"
date: 2025-05-16
category: [SQLD]
---

# 모델링

현실 세계의 비즈니스 프로세스와 데이터 요구사항을 추상적이고 구조화된 형태로 표현하는 과정

> 🦖 데이터베이스의 구조와 관계를 정의하며, 이를 통해 데이터의 저장, 조작, 관리 방법을 명확하게 정의

### 특징

1. **단순화 Simplification**
   - 현실을 단순화하여 핵심 요소에 집중하고 **_불필요한 세부사항을 제거_**
   - 단순화를 통해 복잡한 현실 세계를 이해하고 표현하기 쉬워짐
2. **추상화 Abstraction**
   - 현실세계를 일정한 형식에 맞추어 **_간략하게_** 대략적으로 표현하는 과정
   - 다양한 현상을 일정한 양식인 표기법에 따라 표현
3. **명확화 Clarity**
   - 대상에 대한 애매모함을 최대한 제거하고 **_정확하게 현상을 기술_** 하는 과정
   - 명확화를 통해 모델을 이해하는 이들의 의사소통을 원활히 함

## 데이터 모델링

데이터를 개념적 구조로 표현하여, 정보 시스템을 구축하기 위한 데이터 구조와 관계를 정의하는 분석 및 설계 활동

- 어떤 데이터를 저장할지, 어떻게 연결할지, 무엇이 중요한지를 미리 설계

### 데이터 모델링의 3가지 관점

1. 데이터 관점
   - 데이터가 어떻게 저장되고, 접근되고, 관리되는지를 정의하는 단계
2. 프로세스 관점
   - 시스템이 어떤 작업을 수행하며, 이러한 작업들이 어떻게 조직되고 조정되는지를 정의하는 단계
   - 데이터가 시스템 내에서 어떻게 흐르고 변환되는지에 대한 확인
3. 데이터와 프로세스 관점
   - 데이터 관점과 프로세스 관점을 결합하여 시스템의 전반적인 동작을 이해하는 단계
   - 특정 프로세스가 어떤 데이터를 사용하는지, 데이터가 어떻게 생성되고 변경되는지를 명확하게 정의

### 데이터 모델링의 유의점

- 중복 Duplication
  - 한 테이블 또는 여러 테이블에 같은 정보를 저장하지 않도록 설계
- 비유연성 Inflexibility
  - 사소한 업무 변화에 대해서도 잦은 모델 변경이 되지 않도록 주의
  - 데이터 정의를 프로세스와 분리
- 비일관성 Inconsistency
  - 데이터베이스 내의 정보가 모순되거나 상반된 내용을 갖는 상태를 의미
  - 데이터간 상호연관 관계를 명확히 정의
  - 데이터 품질 관리 필요
  - 데이터의 중복이 없더라도 비일관성은 발생할 수 있음

### 데이터 모델링의 3가지 요소

#### 1. 개념적 모델링

업무 중심적이고 포괄적인 수준의 모델링<br>
**추상화 수준이 가장 높음**<br>
**업무를 분석 뒤 업무의 핵심 엔티티를 추출하는 단계**<br>
도출된 핵심 엔티티들과의 관계들을 표현하기 위해 ERD 작성<br>

- 사용자들의 요구사항 명세로부터 개념적 스키마가 만들어짐
- 개념적 설계의 단계에서 엔티티 타입, 관계 타입, 애트리뷰트들을 식별하고, 애트리뷰트들의 도메인을 결정하고, 후보 키와 기본 키 애트리뷰트들을 결정
- 완성된 개념적 스키마(ER 스키마)는 ER 다이어그램(ERD)로 표현됨
  - ERD는 엔티티들 간의 관계를 시각적으로 다이어그램
  - ERD는 데이터를 엔티티, 속성(Attribute), 관계(Relationship)로 표현하고 시각적으로 모델링한 설계 도구

#### 2. 논리적 모델링

개념적 모델링의 결과를 토대로 세부속성, 식별자, 관계 등을 표현하는 단계<br>
데이터 구조를 정의하기 때문에 비슷한 업무나 프로젝트에서 동일한 형태의 데이터 사용 시 재사용 가능<br>
동일한 논리적 모델을 사용하는 경우 쿼리도 재사용 가능<br>
**데이터 정규화 수행**: 관계 DBMS를 더 좋은 관계 DBMS 스키마로 변환하기 위해서 정규화 과정을 적용<br>
재사용성이 높은 논리적 모델은 유지보수가 용이해짐<br>

- 데이터베이스 관리를 위해 선택한 DBMS의 데이터 모델을 사용하여 논리적 스키마를 생성
- 개념적 스키마에 알고리즘을 적용하여 논리적 스키마를 생성
- 논리적 스키마를 나타내기 위해 관계 데이터 모델을 사용하는 경우에는, ER 모델로 표현된 개념적 스키마를 관계 데이터베이스 스키마로 사상

#### 3. 물리적 모델링

논리 모델링이 끝나면 이를 직접 물리적으로 생성하는 과정<br>
데이터베이스 성능, 디스크 저장구조, 하드웨어의 보안성, 가용성 등을 고려<br>
가장 구체적인 데이터 모델링<br>
**가장 구체적인 모델링이기에 추상화 수준은 가장 낮음**<br>

- 처리 요구사항들을 만족시키기 위해 저장 구조와 접근 경로 등을 결정함
  - 응답 시간, 트랜잭션 처리율

### 스키마의 3단계 구조

<img src="/assets/images/250516/Schema.jpg" alt="schema" height="450">

**스키마**: 데이터베이스의 구조와 제약 조건에 관한 전반적인 명세를 기술한 메타데이터의 집합

#### 외부 스키마

**사용자가 보는 관점에서** 데이터베이스 스키마를 정의<br>
사용자나 응용 프로그램이 필요한 데이터를 정의<br>

- 여러 부류의 사용자를 위해 동일한 개념 단계로부터 다수의 서로 다른 뷰가 제공될 수 있음

#### 개념 스키마

사용자 관점의 데이터베이스 스키마를 통합하여 **데이터베이스의 전체 논리적 구조를 정의**<br>
전체 데이터베이스의 개체, 속성, 관계, 데이터 타입 등을 정의<br>

- 조직체의 정보 모델로서, 물리적인 구현(내부 구현)은 고려하지 않으면서 조직체 전체에 관한 스키마를 포함
- 데이터베이스에 대한 사용자 공동체의 뷰를 나타냄
- 데이터베이스마다 오직 한 개의 개념 스키마가 존재

#### 내부 스키마

데이터가 **물리적으로 어떻게 저장되는지를 정의**<br>
데이터의 저장 구조, 컬럼, 인덱스 등을 정의함<br>

- 데이터베이스에 어떤 데이터가 어떻게 저장되어 있는가를 기술함

### 데이터 독립성 Data Independence

상위 단계의 스키마 정의에 영향을 주지 않으면서 어떤 단계의 스키마 정의를 변경할 수 있음을 의미

> 💡독립성: 물리적, 논리적 구조를 변경하더라도 사용자가 사용하는 응용 프로그램에 영향을 주지 않음

#### 논리적 독립성 Logical data independence

논리적 데이터 구조가 변경되어도(개념 스키마 변경) 응용 프로그램에 영향을 주지 않는 특성

#### 물리적 독립성 Physical data independence

물리적 구조가 변경되어도(내부 스키마 변경) 개념/외부 스키마에 영향을 주지 않는 특성
