---
layout: post
title: "[SQLD] DB Normalization"
date: 2025-05-23
category: [SQLD]
---

# DB Normalization 정규화

모델링 시 최대한 중복 데이터를 허용하지 않아야 저장공간의 효율적 사용과 업무 프로세스의 성능을 기대할 수 있다. 이러한 중복 데이터를 허용하지 않는 방식으로 테이블을 설계하는 방식을 **정규화**라고 한다.

- 하나의 엔티티에 많은 속성을 넣게 되면, 해당 엔티티를 조회할 때마다 많은 양의 데이터가 조회될 것이므로 **최소한의 데이터만을 하나의 엔티티에 넣는 식으로 데이터를 분해하는 과정**
- 데이터의 일관성, 최소한의 데이터 중복, 최대한의 데이터 유연성 위한 과정이라고 볼 수 있음
- 데이터의 **중복을 제거하고 데이터 모델의 독립성을 확보**
- **데이터 이상현상을 줄이기 위한** 데이터 베이스 설계 기법
- 엔티티를 상세화하는 과정으로 논리 데이터 모델링 수행 시점에서 고려됨
- 제1 정규화부터 제5 정규화까지 존재, 실질적으로는 제3 정규화까지만 진행

> **이상현상** <br>
>
> - 정규화를 하지 않아 발생하는 현상
> - 정규화를 거치지 않아 데이터베이스 내에 데이터들이 불필요하게 중복되어 릴레이션 조작 시 예기치 못한 곤란한 현상이 발생하는 것
>
> 1. **삽입 이상 Insertion Anomaly**: 릴레이션에 데이터를 삽입할 때 의도와는 상관없이 원하지 않은 값들도 함께 삽입되는 현상
> 2. **삭제 이상 Deletion Anomaly**: 릴레이션에서 한 tuple을 삭제할 때 의도와는 상관없는 값들도 함께 삭제되는 연쇄 삭제 현상이 일어나는 현상
> 3. **갱신 이상 Update Anomaly**: 릴레이션에서 튜플에 있는 속성값을 갱신할 때 일부 tuple의 정보만 갱신되어 정보에 모순이 생기는 현상
